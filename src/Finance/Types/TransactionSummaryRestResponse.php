<?php
/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\Finance\Types;

/**
 *
 * @property \DTS\eBaySDK\Finance\Types\Amount $creditAmount
 * @property \DTS\eBaySDK\Finance\Enums\BookingEntryEnum $creditBookingEntry
 * @property integer $creditCount
 * @property \DTS\eBaySDK\Finance\Types\Amount $disputeAmount
 * @property \DTS\eBaySDK\Finance\Enums\BookingEntryEnum $disputeBookingEntry
 * @property integer $disputeCount
 * @property \DTS\eBaySDK\Finance\Types\Amount $onHoldAmount
 * @property \DTS\eBaySDK\Finance\Enums\BookingEntryEnum $onHoldBookingEntry
 * @property integer $onHoldCount
 * @property \DTS\eBaySDK\Finance\Types\Amount $refundAmount
 * @property \DTS\eBaySDK\Finance\Enums\BookingEntryEnum $refundBookingEntry
 * @property integer $refundCount
 * @property \DTS\eBaySDK\Finance\Types\Amount $shippingLabelAmount
 * @property \DTS\eBaySDK\Finance\Enums\BookingEntryEnum $shippingLabelBookingEntry
 * @property integer $shippingLabelCount
 * @property \DTS\eBaySDK\Finance\Types\Amount $transferAmount
 * @property \DTS\eBaySDK\Finance\Enums\BookingEntryEnum $transferBookingEntry
 * @property integer $transferCount
 */
class TransactionSummaryRestResponse extends \DTS\eBaySDK\Types\BaseType
{
    /**
     * @var array Properties belonging to objects of this class.
     */
    private static $propertyTypes = [
        'creditAmount' => [
            'type' => 'DTS\eBaySDK\Finance\Types\Amount',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'creditAmount'
        ],
        'creditBookingEntry' => [
            'type' => 'DTS\eBaySDK\Finance\Enums\BookingEntryEnum',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'creditBookingEntry'
        ],
        'creditCount' => [
            'type' => 'integer',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'creditCount'
        ],
        'disputeAmount' => [
            'type' => 'DTS\eBaySDK\Finance\Types\Amount',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'disputeAmount'
        ],
        'disputeBookingEntry' => [
            'type' => 'DTS\eBaySDK\Finance\Enums\BookingEntryEnum',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'disputeBookingEntry'
        ],
        'disputeCount' => [
            'type' => 'integer',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'disputeCount'
        ],
        'onHoldAmount' => [
            'type' => 'DTS\eBaySDK\Finance\Types\Amount',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'onHoldAmount'
        ],
        'onHoldBookingEntry' => [
            'type' => 'DTS\eBaySDK\Finance\Enums\BookingEntryEnum',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'onHoldBookingEntry'
        ],
        'onHoldCount' => [
            'type' => 'integer',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'onHoldCount'
        ],
        'refundAmount' => [
            'type' => 'DTS\eBaySDK\Finance\Types\Amount',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'refundAmount'
        ],
        'refundBookingEntry' => [
            'type' => 'DTS\eBaySDK\Finance\Enums\BookingEntryEnum',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'refundBookingEntry'
        ],
        'refundCount' => [
            'type' => 'integer',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'refundCount'
        ],
        'shippingLabelAmount' => [
            'type' => 'DTS\eBaySDK\Finance\Types\Amount',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'shippingLabelAmount'
        ],
        'shippingLabelBookingEntry' => [
            'type' => 'DTS\eBaySDK\Finance\Enums\BookingEntryEnum',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'shippingLabelBookingEntry'
        ],
        'shippingLabelCount' => [
            'type' => 'integer',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'shippingLabelCount'
        ],
        'transferAmount' => [
            'type' => 'DTS\eBaySDK\Finance\Types\Amount',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'transferAmount'
        ],
        'transferBookingEntry' => [
            'type' => 'DTS\eBaySDK\Finance\Enums\BookingEntryEnum',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'transferBookingEntry'
        ],
        'transferCount' => [
            'type' => 'integer',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'transferCount'
        ],
    ];

    /**
     * @param array $values Optional properties and values to assign to the object.
     * @param int $statusCode Status code
     * @param array $headers HTTP Response headers.
     */
    public function __construct(array $values = [], $statusCode = 200, array $headers = [])
    {
        list($parentValues, $childValues) = self::getParentValues(self::$propertyTypes, $values);

        parent::__construct($parentValues);

        if (!array_key_exists(__CLASS__, self::$properties)) {
            self::$properties[__CLASS__] = array_merge(self::$properties[get_parent_class()], self::$propertyTypes);
        }

        $this->setValues(__CLASS__, $childValues);
    }
}
