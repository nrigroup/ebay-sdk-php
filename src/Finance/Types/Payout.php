<?php
/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\Finance\Types;

/**
 *
 * @property \DTS\eBaySDK\Finance\Types\Amount $amount
 * @property string $lastAttemptedPayoutDate
 * @property string $payoutDate
 * @property string $payoutId
 * @property \DTS\eBaySDK\Finance\Types\PayoutInstrument $payoutInstrument
 * @property \DTS\eBaySDK\Finance\Enums\PayoutStatusEnum $payoutStatus
 * @property string $payoutStatusDescription
 * @property integer $transactionCount
 */
class Payout extends \DTS\eBaySDK\Types\BaseType
{
    /**
     * @var array Properties belonging to objects of this class.
     */
    private static $propertyTypes = [
        'amount' => [
            'type' => 'DTS\eBaySDK\Finance\Types\Amount',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'amount'
        ],
        'lastAttemptedPayoutDate' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'lastAttemptedPayoutDate'
        ],
        'payoutDate' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'payoutDate'
        ],
        'payoutId' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'payoutId'
        ],
        'payoutInstrument' => [
            'type' => 'DTS\eBaySDK\Finance\Types\PayoutInstrument',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'payoutInstrument'
        ],
        'payoutStatus' => [
            'type' => 'DTS\eBaySDK\Finance\Enums\PayoutStatusEnum',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'payoutStatus'
        ],
        'payoutStatusDescription' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'payoutStatusDescription'
        ],
        'transactionCount' => [
            'type' => 'integer',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'transactionCount'
        ]
    ];

    /**
     * @param array $values Optional properties and values to assign to the object.
     */
    public function __construct(array $values = [])
    {
        list($parentValues, $childValues) = self::getParentValues(self::$propertyTypes, $values);

        parent::__construct($parentValues);

        if (!array_key_exists(__CLASS__, self::$properties)) {
            self::$properties[__CLASS__] = array_merge(self::$properties[get_parent_class()], self::$propertyTypes);
        }

        $this->setValues(__CLASS__, $childValues);
    }
}
